import webpack from 'webpack';
import WebpackDevServer from 'webpack-dev-server';
import applyWebpackConfig from './config/webpack.config.dev';
import getPath from './util/path';

function done() {
    console.log('hello world');
}

export default (option) => {
    let {config, pkg} = option;
    const {proxy} = config;
    if (typeof(proxy) === 'string') {
        config = {...config, proxy: require(getPath(process.cwd())(config.proxy))};
    }
    function server(avgs) {
        let webpackConfig = applyWebpackConfig(config, pkg)
        Object.keys(webpackConfig.entry).forEach(function (name) {
            webpackConfig.entry[name] = [`webpack-dev-server/client?http://${config.host}:${config.port}/`, 'webpack/hot/dev-server'].concat(webpackConfig.entry[name])
        })
        const compiler = webpack(webpackConfig);
        // compiler.run(done);
        const server = new WebpackDevServer(compiler, {
            hot: true,
            // clientLogLevel: 'info',
            // quiet: true,
            publicPath: '/',
            contentBase: './',
            proxy: config.proxy,
            stats: {colors: true}
        });
        server.listen(config.port, config.host, function (err) {
            if (err) {
                console.log(err);
            }
            console.log(`Listening at http://${config.host}:${config.port}...`);
        });
    }
    return server;
}
