import upload from 'node-client-upload';
import {readdirSync, lstatSync, realpathSync} from 'fs';
import {basename, parse} from 'path';
import {error, warning, success, info} from './util/color'

function deploy(file, path, server, to) {
    const toPath = to + path;
    upload(server, file, {
        to: toPath
    }, function (res, body) {
        console.log(info(file), warning('>>>>>>>>>>'), success(toPath));
    });
}

function getFiles(path, server, to, base, rewrite) {
    if (lstatSync(path).isDirectory()) {
        const files = readdirSync(path);
        files.forEach(function (file) {
            const filename = path + '/' + file;
            getFiles(filename, server, to, base, rewrite);
        });
    } else {
        
        let {name, ext} = parse(path);
        let pathname = path.replace(base, '') || name + ext;
        if (rewrite) {
            pathname = pathname.replace(ext, rewrite);
        }
        deploy(path, pathname, server, to);
    }
}

export default(option) => {
    const {config, pkg} = option;
    const deploys = config.deploy;
    
    return () => {
        if (Array.isArray(deploys)) {
            deploys.forEach(deploy => {
                const {dir, server, to, rewrite} = deploy;
                getFiles(dir, server, to, dir, rewrite);
            });
        } else {
            const {dir, server, to} = deploys;
            getFiles(dir, server, to, dir);
        }
    }
}