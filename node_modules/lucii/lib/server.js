'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _webpack = require('webpack');

var _webpack2 = _interopRequireDefault(_webpack);

var _webpackDevServer = require('webpack-dev-server');

var _webpackDevServer2 = _interopRequireDefault(_webpackDevServer);

var _webpackConfig = require('./config/webpack.config.dev');

var _webpackConfig2 = _interopRequireDefault(_webpackConfig);

var _path = require('./util/path');

var _path2 = _interopRequireDefault(_path);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function done() {
    console.log('hello world');
}

exports.default = function (option) {
    var config = option.config,
        pkg = option.pkg;
    var _config = config,
        proxy = _config.proxy;

    if (typeof proxy === 'string') {
        config = (0, _extends3.default)({}, config, { proxy: require((0, _path2.default)(process.cwd())(config.proxy)) });
    }
    function server(avgs) {
        var webpackConfig = (0, _webpackConfig2.default)(config, pkg);
        (0, _keys2.default)(webpackConfig.entry).forEach(function (name) {
            webpackConfig.entry[name] = ['webpack-dev-server/client?http://' + config.host + ':' + config.port + '/', 'webpack/hot/dev-server'].concat(webpackConfig.entry[name]);
        });
        var compiler = (0, _webpack2.default)(webpackConfig);
        // compiler.run(done);
        var server = new _webpackDevServer2.default(compiler, {
            hot: true,
            // clientLogLevel: 'info',
            // quiet: true,
            publicPath: '/',
            contentBase: './',
            proxy: config.proxy,
            stats: { colors: true }
        });
        server.listen(config.port, config.host, function (err) {
            if (err) {
                console.log(err);
            }
            console.log('Listening at http://' + config.host + ':' + config.port + '...');
        });
    }
    return server;
};

module.exports = exports['default'];